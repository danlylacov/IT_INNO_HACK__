import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useNavigate –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

const Sidebar = () => {
    const navigate = useNavigate(); // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç navigate –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const [projects, setProjects] = useState([
        { name: "–ü—Ä–æ–µ–∫—Ç 1" },
        { name: "–ü—Ä–æ–µ–∫—Ç 2" },
        { name: "–ü—Ä–æ–µ–∫—Ç 3" }
    ]);

    const randomNames = ["–ü—Ä–æ–µ–∫—Ç A", "–ü—Ä–æ–µ–∫—Ç B", "–ü—Ä–æ–µ–∫—Ç C", "–ü—Ä–æ–µ–∫—Ç D", "–ü—Ä–æ–µ–∫—Ç E"];

    const addRandomProject = () => {
        const randomName = randomNames[Math.floor(Math.random() * randomNames.length)];
        setProjects([...projects, { name: randomName }]);
    };

    const navigateToProject = (projectName) => {
        const formattedName = projectName.replace(/\s+/g, '-').toLowerCase();
        navigate(`/projects/${formattedName}`); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
    };

    const removeProject = (index) => {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É
        const newProjects = projects.filter((_, i) => i !== index);
        setProjects(newProjects);
    };

    return (
        <div className="col-auto sidebar" style={{
            width: '16vw',
            background: 'linear-gradient(to right, #59F992, #7AFFC7)',
            color: 'black',
            padding: '20px',
            borderTopRightRadius: '15px',
            borderTopLeftRadius: '15px',
            boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)',
            borderRight: '1px solid #006323',
            height: '100%',
            marginTop: '20px',
            marginLeft: '20px',
            overflowY: 'auto', // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        }}>
            <div className="sidebar-header">
                <h4 style={{ color: 'black', display: 'inline-block' }}>Name of workspace</h4>

                <hr style={{ border: 0, height: '1px', backgroundColor: '#333' }} />
            </div>

            <ul className="nav flex-column">
                <li className="nav-item">
                    <a className="nav-link" href="#" style={{ color: 'black' }}>–ú–æ–∏ –∑–∞–¥–∞—á–∏</a>
                </li>
                <li className="nav-item">
                    <a className="nav-link" href="#" style={{ color: 'black' }}>–í—Å–µ –∑–∞–¥–∞—á–∏</a>
                </li>
                <li className="nav-item">
                    <a className="nav-link" href="#" style={{ color: 'black' }}>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</a>
                </li>
                <hr style={{ border: 0, height: '1px', backgroundColor: '#333' }} />
            </ul>

            {/* –ü—Ä–æ–µ–∫—Ç—ã */}
            <div className="projects">
                <h5 style={{ color: 'black' }}>–ü—Ä–æ–µ–∫—Ç—ã</h5> {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ—Ä–Ω—ã–π */}
                <button
                    onClick={addRandomProject}
                    style={{
                        backgroundColor: '#28a745',
                        color: 'white',
                        border: 'none',
                        borderRadius: '5px',
                        padding: '5px 10px',
                        marginLeft: '10px' // –û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞
                    }}
                >
                    +
                </button>
                <ul className="nav flex-column">
                    {projects.map((project, index) => (
                        <li key={index} className="nav-item" style={{ marginBottom: '10px' }}>
                            <div style={{ display: 'flex', alignItems: 'center' }}>
                                <span
                                    className="nav-link"
                                    style={{ color: 'black', cursor: 'pointer', flexGrow: 1 }}
                                    onClick={() => navigateToProject(project.name)} // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                                >
                                    {project.name}
                                </span>
                                {/* –°–∏–º–≤–æ–ª –∫—Ä–µ—Å—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ */}
                                <span
                                    onClick={() => removeProject(index)}
                                    style={{
                                        color: 'red',
                                        cursor: 'pointer',
                                        marginLeft: '10px' // –û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞
                                    }}
                                >
                                    ‚úñ
                                </span>
                            </div>
                            {/* –ü–æ–¥–º–µ–Ω—é –¥–ª—è –∑–∞–¥–∞—á –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
                            <ul className="nav flex-column ms-3">
                                <li className="nav-item">
                                    <a className="nav-link" href={`/projects/${project.name.replace(/\s+/g, '-').toLowerCase()}/tasks`} style={{ color: 'black' }}>üìå –ó–∞–¥–∞—á–∏</a>
                                </li>
                                <li className="nav-item">
                                    <a className="nav-link" href={`/projects/${project.name.replace(/\s+/g, '-').toLowerCase()}/settings/participants`} style={{ color: 'black' }}>‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</a>
                                </li>
                                <li className="nav-item">
                                    <a className="nav-link" href={`/projects/${project.name.replace(/\s+/g, '-').toLowerCase()}/editor`} style={{ color: 'black' }}>üìÑ –¥–æ–∫—É–º–µ–Ω—Ç—ã</a>
                                </li>
                            </ul>
                        </li>
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default Sidebar;